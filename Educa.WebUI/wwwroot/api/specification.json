{
  "x-generator": "NSwag v13.6.0.0 (NJsonSchema v10.1.18.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "EducaDotNet API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/Account/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_GetUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResultOfUserDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": [
              "admin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_DeleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": [
              "admin"
            ]
          }
        ]
      }
    },
    "/api/Account/GetAll": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_GetAll",
        "requestBody": {
          "x-name": "query",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GridQuery"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GridDataOfUserVM"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": [
              "admin"
            ]
          }
        ]
      }
    },
    "/api/Account": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_CreateUser",
        "requestBody": {
          "x-name": "dtoModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": [
              "admin"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_UpdateUser",
        "requestBody": {
          "x-name": "dtoModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": [
              "admin"
            ]
          }
        ]
      }
    },
    "/api/Account/Login": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_Login",
        "requestBody": {
          "x-name": "dtoModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataResultOfString"
                }
              }
            }
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "WeatherForecast_Get",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DataResultOfUserDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServerResult"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UserDto"
                  }
                ]
              }
            }
          }
        ]
      },
      "UserDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "email",
          "userName",
          "password"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1
          },
          "userName": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "firstName": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0,
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0,
            "nullable": true
          },
          "password": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "ServerResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "succeeded": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GridDataOfUserVM": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "draw": {
            "type": "integer",
            "format": "int32"
          },
          "recordsTotal": {
            "type": "integer",
            "format": "int32"
          },
          "recordsFiltered": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/UserVM"
            }
          }
        }
      },
      "UserVM": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GridQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "columns": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GridColumn"
            }
          },
          "draw": {
            "type": "integer",
            "format": "int32"
          },
          "length": {
            "type": "integer",
            "format": "int32"
          },
          "order": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DataOrder"
            }
          },
          "search": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GridSearch"
              }
            ]
          },
          "start": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GridColumn": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "orderable": {
            "type": "boolean"
          },
          "searchable": {
            "type": "boolean"
          },
          "search": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/GridSearch"
              }
            ]
          }
        }
      },
      "GridSearch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "regex": {
            "type": "boolean"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DataOrder": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "column": {
            "type": "integer",
            "format": "int32"
          },
          "dir": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DataResultOfString": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServerResult"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "data": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "LoginDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "userName",
          "password"
        ],
        "properties": {
          "userName": {
            "type": "string",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "WeatherForecast": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32"
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}